# -*- coding: utf-8 -*-
############################################################
#
# Autogenerated by the KBase type compiler -
# any changes made here will be overwritten
#
############################################################

from __future__ import print_function
# the following is a hack to get the baseclient to import whether we're in a
# package or not. This makes pep8 unhappy hence the annotations.
try:
    # baseclient and this client are in a package
    from .baseclient import BaseClient as _BaseClient  # @UnusedImport
except:
    # no they aren't
    from baseclient import BaseClient as _BaseClient  # @Reimport


class HandleMngr(object):

    def __init__(
            self, url=None, timeout=30 * 60, user_id=None,
            password=None, token=None, ignore_authrc=False,
            trust_all_ssl_certificates=False,
            auth_svc='https://kbase.us/services/authorization/Sessions/Login'):
        if url is None:
            raise ValueError('A url is required')
        self._service_ver = None
        self._client = _BaseClient(
            url, timeout=timeout, user_id=user_id, password=password,
            token=token, ignore_authrc=ignore_authrc,
            trust_all_ssl_certificates=trust_all_ssl_certificates,
            auth_svc=auth_svc)

    def is_readable(self, token, nodeurl, context=None):
        """
        The is_readable function will return true if the
        underlying shock object is readable by the owner of the
        token. The token is passed by the client.
        :param token: instance of String
        :param nodeurl: instance of String
        :returns: instance of Long
        """
        return self._client.call_method(
            'HandleMngr.is_readable',
            [token, nodeurl], self._service_ver, context)

    def add_read_acl(self, hids, username, context=None):
        """
        :param hids: instance of list of type "HandleId" (The add_read_acl
           functions will update the acl of the shock node that the handle
           references. The function is only accessible to a specific list of
           users specified at startup time. The underlying shock node will be
           made readable to the user requested.)
        :param username: instance of String
        """
        return self._client.call_method(
            'HandleMngr.add_read_acl',
            [hids, username], self._service_ver, context)

    def status(self, context=None):
        return self._client.call_method('HandleMngr.status',
                                        [], self._service_ver, context)
